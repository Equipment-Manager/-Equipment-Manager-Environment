name: Docker

on:
  push:
    tags:
      - v*

env:
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  COMPOSER_VERSION: ${{ secrets.COMPOSER_VERSION }}

jobs:
  push:
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
<<<<<<< HEAD
        run: docker build . --file Dockerfile --tag $IMAGE_NAME
=======
        run: |
          IMAGE_NAME=$(echo $IMAGE_NAME | tr '[A-Z]' '[a-z]')
          docker build . --file ./php-alpine/Dockerfile --build-arg COMPOSER_VERSION=$COMPOSER_VERSION --tag $IMAGE_NAME
>>>>>>> 881d354c2420720f3606d5ea534600b5f82ba436

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.SECRET_TOKEN }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
<<<<<<< HEAD

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "develop" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
=======
          docker tag $IMAGE_NAME:latest $IMAGE_ID:$VERSION
>>>>>>> 881d354c2420720f3606d5ea534600b5f82ba436
          docker push $IMAGE_ID:$VERSION
